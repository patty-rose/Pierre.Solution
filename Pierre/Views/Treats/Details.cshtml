@{
  Layout = "_Layout";
}

@model Pierre.Models.Treat

<h1>Treat Details</h1>
<table class="table">
  <thead><tr><th>Price</th><th>Treat</th><th>Available Flavors</th><th></th></tr></thead>
  <tbody>
    <tr>
      <td>
        $@Html.DisplayFor(model => model.Price)
      </td>
      <td>
        @if(User.Identity.IsAuthenticated)
          {
            @if(User.IsInRole("Admin"))
            {
              @Html.ActionLink("", "Delete", new {id = Model.TreatId}, new {@class="fa-solid fa-trash-can"})
            }
          }
        @Html.DisplayFor(model => model.Type)
      </td>
      <td>
        @if(@Model.JoinEntities.Count == 0)
        {
          <p>This treat does not have any flavors associated with it.</p>
        }
        else
        {
          <ul>
          @foreach(var join in Model.JoinEntities)
          {
            <li>
            @if(User.Identity.IsAuthenticated)
              {
                @if(User.IsInRole("Admin"))
                {
                  @using (Html.BeginForm("DeleteFlavor", "Treats", FormMethod.Post, new { @class = "delete-form"}))
                  {
                    @Html.Hidden("joinId", @join.FlavorTreatId)
                    <button class="delete-icon" type="submit">
                      <i class="fa-solid fa-trash-can"></i>
                    </button> 
                  }
                }
              }
            @join.Flavor.Name</li>
          }
          </ul>
        }
        @if (User.Identity.IsAuthenticated)
          {
            @if (User.IsInRole("Admin"))
            {
              <br>
              @Html.ActionLink("Add more flavors", "AddFlavor", new { id = Model.TreatId })
            }
          }
      </td>
        @if(User.Identity.IsAuthenticated) 
        {  
          @if(User.IsInRole("Admin"))
          {
            <td>
            @Html.ActionLink("Edit Treat", "Edit", new { id = Model.TreatId })
            </td>
          }
        }
    </tr>
  </tbody>
</table>
